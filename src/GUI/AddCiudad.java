package GUI;
import logica.Grafo;
import org.graphstream.graph.*;

/**
 * Esta clase crea una ventana donde el usuario podrá crear 
 * un Vertice en el Grafo y decidir su nombre.
 * 
 * @author: Stefano Boschetti
 * @author: Diego De Jesus
 * @version: 20/02/2024
 */
public class AddCiudad extends javax.swing.JFrame {
    //    Campos de la clase
    Graph graphStream;
    Grafo myGrafo;
    
/**
 * Constructor de la ventana AddCiudad.
 *
 * @param graph Grafo de GraphStream.
 * @param myGraph Grafo propio de la simulación.
 */
    public AddCiudad(Graph graph, Grafo myGraph) {
        graphStream = graph;
        myGrafo = myGraph;
        initComponents();
        this.setAlwaysOnTop(true);
    }//Cierre del constructor

/**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always
 * regenerated by the Form Editor.
 */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nombreNuevo = new javax.swing.JTextField();
        crearCiudad = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        nombreNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreNuevoActionPerformed(evt);
            }
        });

        crearCiudad.setText("Crear");
        crearCiudad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearCiudadActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("AGREGAR CIUDAD");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel2.setForeground(java.awt.Color.gray);
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Insertar nombre o dejar vacio");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 10)); // NOI18N
        jLabel3.setForeground(java.awt.Color.gray);
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("*El nombre no puede contener numeros*");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(crearCiudad)
                .addGap(103, 103, 103))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(nombreNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nombreNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(crearCiudad)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

/**
 * Método que cuando la caja de texto "nombreNuevo" es activada añade un Vertice al grafo,
 * con el nombre dado en la caja de texto.
 */  
    private void nombreNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreNuevoActionPerformed
        Boolean ok = true;
        if(myGrafo.numVertices == myGrafo.maxNodos){
            Alerta myAlerta = new Alerta("Se ha alcanzado el maximo de ciudades (20)");
            myAlerta.setLocationRelativeTo(this);
            myAlerta.setVisible(true);
        }
        else if(nombreNuevo.getText().replaceAll("[\\D]", "").length() >0 ){
            Alerta myAlerta = new Alerta("El nombre no puede contener numeros");
            myAlerta.setLocationRelativeTo(this);
            myAlerta.setVisible(true);
        }
        else{
            if(!nombreNuevo.getText().equals("")){
                for(int i = 0 ; i < myGrafo.numVertices; i++){
                    if ( myGrafo.listaAdy[i].nombre.equals(nombreNuevo.getText()) ){
                        Alerta myAlerta = new Alerta("Esta ciudad ya existe");
                        myAlerta.setLocationRelativeTo(this);
                        myAlerta.setVisible(true);
                        ok = false;
                        break;
                    }
                }
            }
            if(ok){
               graphStream.addNode(String.format("(%d)",myGrafo.numVertices)+nombreNuevo.getText())
                .setAttribute("ui.label", String.format("(%d)",myGrafo.numVertices)+nombreNuevo.getText());
            myGrafo.crearVertice(nombreNuevo.getText());
            this.setVisible(false);  
            }
        }
    }//GEN-LAST:event_nombreNuevoActionPerformed

 /**
 * Método que al presionar el botón "crearCiudad" añade un Vertice al grafo,
 * con el nombre dado en "nombreNuevo".
 */
    private void crearCiudadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearCiudadActionPerformed
        Boolean ok = true;
        if(myGrafo.numVertices == myGrafo.maxNodos){
            Alerta myAlerta = new Alerta("Se ha alcanzado el maximo de ciudades (20)");
            myAlerta.setLocationRelativeTo(this);
            myAlerta.setVisible(true);
        }
        else if(nombreNuevo.getText().replaceAll("[\\D]", "").length() >0 ){
            Alerta myAlerta = new Alerta("El nombre no puede contener numeros");
            myAlerta.setLocationRelativeTo(this);
            myAlerta.setVisible(true);
        }
        else{
            if(!nombreNuevo.getText().equals("")){
                for(int i = 0 ; i < myGrafo.numVertices; i++){
                    if ( myGrafo.listaAdy[i].nombre.equals(nombreNuevo.getText()) ){
                        Alerta myAlerta = new Alerta("Esta ciudad ya existe");
                        myAlerta.setLocationRelativeTo(this);
                        myAlerta.setVisible(true);
                        ok = false;
                        break;
                    }
                }
            }
            if(ok){
               graphStream.addNode(String.format("(%d)",myGrafo.numVertices)+nombreNuevo.getText())
                .setAttribute("ui.label", String.format("(%d)",myGrafo.numVertices)+nombreNuevo.getText());
            myGrafo.crearVertice(nombreNuevo.getText());
            this.setVisible(false);  
            }
        }
    }//GEN-LAST:event_crearCiudadActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton crearCiudad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nombreNuevo;
    // End of variables declaration//GEN-END:variables
}//Cierre de la clase
